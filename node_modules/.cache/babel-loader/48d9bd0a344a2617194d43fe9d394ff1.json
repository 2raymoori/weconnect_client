{"ast":null,"code":"import axios from \"axios\";\nimport authToken from \"../utils/authToken\";\nimport { setAlert } from \"./Alert\";\nimport { loadCurPosts, loadOtherPosts } from \"./Post\";\nimport { loadProfiles } from \"./Profile.Action\";\nconst NEW_URL = \"https://weconnect-api-u9ml.onrender.com/\";\nconst oldURL = \"http://localhost:5001/\"; //Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    authToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(`${NEW_}api/auth`); // console.log(res.data.data[0].msg);\n\n    dispatch({\n      type: \"USER_LOADED\",\n      payload: res.data.data[0].msg\n    });\n    const response = await axios.get(`${NEW_}api/profile/me`);\n    console.log(response.data.data[0]);\n    dispatch({\n      type: \"L_PROFILE\",\n      payload: response.data.data[0]\n    });\n  } catch (error) {\n    dispatch({\n      type: \"AUTH_ERROR\"\n    });\n  }\n};\nexport const RegisterUser = _ref => {\n  let {\n    fName,\n    lName,\n    email,\n    password,\n    passwordConfirm,\n    profileImage\n  } = _ref;\n  return async dispatch => {\n    try {\n      const fomData = new FormData();\n      fomData.append(\"fName\", fName);\n      fomData.append(\"lName\", lName);\n      fomData.append(\"email\", email);\n      fomData.append(\"password\", password);\n      fomData.append(\"passwordConfirm\", passwordConfirm);\n      fomData.append(\"pImage\", profileImage);\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const body = JSON.stringify({\n        fName,\n        lName,\n        email,\n        password,\n        passwordConfirm\n      }); // const res = await axios.post(\n      //   \"http://localhost:5000/api/user\",\n      //   body,\n      //   formData,\n      //   config\n      // );\n\n      const res = await axios.post(`${NEW_}api/user`, fomData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: {\n          token: res.data.data[0].token\n        }\n      });\n      dispatch(loadUser());\n\n      if (res.status === 201) {\n        // console.log(\"sdfs\");\n        res.data.data.forEach(err => {\n          dispatch(setAlert(err.msg, \"danger\"));\n        });\n      } // console.log(res.data)\n\n    } catch (error) {// console.log(error.message);\n      // console.log(error);\n    }\n  };\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    // console.log(\"FROM XYZZ\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    const res = await axios.post(`${NEW_}api/auth/login`, body, config);\n\n    if (res.data.status == \"Success\") {\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: {\n          token: res.data.data[0].msg\n        }\n      });\n      dispatch(loadUser());\n      dispatch(loadProfiles());\n      dispatch(loadCurPosts());\n      dispatch(loadOtherPosts());\n    }\n  } catch (error) {\n    dispatch(setAlert(\"Sorry There exists an error in your credentials. Please try again.\", \"danger\"));\n    dispatch({\n      type: \"LOGIN_FAILED\"\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_PROFILE\"\n  });\n  dispatch({\n    type: \"LOGOUT\"\n  });\n};","map":{"version":3,"names":["axios","authToken","setAlert","loadCurPosts","loadOtherPosts","loadProfiles","NEW_URL","oldURL","loadUser","dispatch","localStorage","token","res","get","NEW_","type","payload","data","msg","response","console","log","error","RegisterUser","fName","lName","email","password","passwordConfirm","profileImage","fomData","FormData","append","config","headers","body","JSON","stringify","post","status","forEach","err","login","logout"],"sources":["/home/lot/REACT_JS_PROJECTS/weconnectclient/src/Actions/Auth.js"],"sourcesContent":["import axios from \"axios\";\nimport authToken from \"../utils/authToken\";\nimport { setAlert } from \"./Alert\";\nimport { loadCurPosts, loadOtherPosts } from \"./Post\";\nimport { loadProfiles } from \"./Profile.Action\";\nconst NEW_URL = \"https://weconnect-api-u9ml.onrender.com/\";\nconst oldURL = \"http://localhost:5001/\";\n//Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    authToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(`${NEW_}api/auth`);\n    // console.log(res.data.data[0].msg);\n    dispatch({\n      type: \"USER_LOADED\",\n      payload: res.data.data[0].msg,\n    });\n\n    const response = await axios.get(`${NEW_}api/profile/me`);\n    console.log(response.data.data[0]);\n    dispatch({\n      type: \"L_PROFILE\",\n      payload: response.data.data[0],\n    });\n  } catch (error) {\n    dispatch({\n      type: \"AUTH_ERROR\",\n    });\n  }\n};\n\nexport const RegisterUser =\n  ({ fName, lName, email, password, passwordConfirm, profileImage }) =>\n  async (dispatch) => {\n    try {\n      const fomData = new FormData();\n      fomData.append(\"fName\", fName);\n      fomData.append(\"lName\", lName);\n      fomData.append(\"email\", email);\n      fomData.append(\"password\", password);\n      fomData.append(\"passwordConfirm\", passwordConfirm);\n      fomData.append(\"pImage\", profileImage);\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n      const body = JSON.stringify({\n        fName,\n        lName,\n        email,\n        password,\n        passwordConfirm,\n      });\n\n      // const res = await axios.post(\n      //   \"http://localhost:5000/api/user\",\n      //   body,\n      //   formData,\n      //   config\n      // );\n\n      const res = await axios.post(`${NEW_}api/user`, fomData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: { token: res.data.data[0].token },\n      });\n      dispatch(loadUser());\n      if (res.status === 201) {\n        // console.log(\"sdfs\");\n        res.data.data.forEach((err) => {\n          dispatch(setAlert(err.msg, \"danger\"));\n        });\n      }\n      // console.log(res.data)\n    } catch (error) {\n      // console.log(error.message);\n      // console.log(error);\n    }\n  };\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    // console.log(\"FROM XYZZ\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      email,\n      password,\n    });\n    const res = await axios.post(\n      `${NEW_}api/auth/login`,\n      body,\n      config\n    );\n    if (res.data.status == \"Success\") {\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: { token: res.data.data[0].msg },\n      });\n      dispatch(loadUser());\n      dispatch(loadProfiles());\n      dispatch(loadCurPosts());\n      dispatch(loadOtherPosts());\n    }\n  } catch (error) {\n    dispatch(\n      setAlert(\n        \"Sorry There exists an error in your credentials. Please try again.\",\n        \"danger\"\n      )\n    );\n    dispatch({\n      type: \"LOGIN_FAILED\",\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: \"CLEAR_PROFILE\" });\n  dispatch({\n    type: \"LOGOUT\",\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}